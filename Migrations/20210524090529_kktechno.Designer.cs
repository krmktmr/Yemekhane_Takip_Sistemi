// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using YemekHaneTakipOtomasyonu.Models;

namespace YemekHaneTakipOtomasyonu.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20210524090529_kktechno")]
    partial class kktechno
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("YemekHaneTakipOtomasyonu.Models.hareketler", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Kontor")
                        .HasColumnType("int");

                    b.Property<string>("gecisdurum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("isim")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("kartno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ogunid")
                        .HasColumnType("int");

                    b.Property<DateTime?>("tarih_saat")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.HasIndex("ogunid");

                    b.ToTable("hareketlers");
                });

            modelBuilder.Entity("YemekHaneTakipOtomasyonu.Models.kod_bolum", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("kod_Bolums");
                });

            modelBuilder.Entity("YemekHaneTakipOtomasyonu.Models.kod_departman", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("kod_Departmen");
                });

            modelBuilder.Entity("YemekHaneTakipOtomasyonu.Models.kod_sirket", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("kod_Sirkets");
                });

            modelBuilder.Entity("YemekHaneTakipOtomasyonu.Models.personel_kartlari", b =>
                {
                    b.Property<int>("kartno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("adi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("bolumid")
                        .HasColumnType("int");

                    b.Property<DateTime?>("cikistarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("departmanid")
                        .HasColumnType("int");

                    b.Property<DateTime?>("giristarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("kalankontor")
                        .HasColumnType("int");

                    b.Property<int>("sirketid")
                        .HasColumnType("int");

                    b.Property<string>("soyadi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("unvani")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("kartno");

                    b.HasIndex("bolumid");

                    b.HasIndex("departmanid");

                    b.HasIndex("sirketid");

                    b.ToTable("personel_Kartlaris");
                });

            modelBuilder.Entity("YemekHaneTakipOtomasyonu.Models.silinen_personel_kartlari", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("adi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("bolumid")
                        .HasColumnType("int");

                    b.Property<DateTime?>("cikistarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("departmanid")
                        .HasColumnType("int");

                    b.Property<DateTime?>("giristarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("kalankontor")
                        .HasColumnType("int");

                    b.Property<int>("kartno")
                        .HasColumnType("int");

                    b.Property<int>("sirketid")
                        .HasColumnType("int");

                    b.Property<string>("soyadi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("unvani")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("silinen_Personel_Kartlaris");
                });

            modelBuilder.Entity("YemekHaneTakipOtomasyonu.Models.users", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("kullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sifre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("YemekHaneTakipOtomasyonu.Models.yemek_ogun", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("basla")
                        .HasColumnType("int");

                    b.Property<int>("bitis")
                        .HasColumnType("int");

                    b.Property<string>("ogun_ad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ucret")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("yemek_Oguns");
                });

            modelBuilder.Entity("YemekHaneTakipOtomasyonu.Models.hareketler", b =>
                {
                    b.HasOne("YemekHaneTakipOtomasyonu.Models.yemek_ogun", "ogun")
                        .WithMany("hareketlers")
                        .HasForeignKey("ogunid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ogun");
                });

            modelBuilder.Entity("YemekHaneTakipOtomasyonu.Models.personel_kartlari", b =>
                {
                    b.HasOne("YemekHaneTakipOtomasyonu.Models.kod_bolum", "bolum")
                        .WithMany("personel_Kartlaris")
                        .HasForeignKey("bolumid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YemekHaneTakipOtomasyonu.Models.kod_departman", "departman")
                        .WithMany("personel_Kartlaris")
                        .HasForeignKey("departmanid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YemekHaneTakipOtomasyonu.Models.kod_sirket", "sirket")
                        .WithMany("personel_Kartlaris")
                        .HasForeignKey("sirketid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("bolum");

                    b.Navigation("departman");

                    b.Navigation("sirket");
                });

            modelBuilder.Entity("YemekHaneTakipOtomasyonu.Models.kod_bolum", b =>
                {
                    b.Navigation("personel_Kartlaris");
                });

            modelBuilder.Entity("YemekHaneTakipOtomasyonu.Models.kod_departman", b =>
                {
                    b.Navigation("personel_Kartlaris");
                });

            modelBuilder.Entity("YemekHaneTakipOtomasyonu.Models.kod_sirket", b =>
                {
                    b.Navigation("personel_Kartlaris");
                });

            modelBuilder.Entity("YemekHaneTakipOtomasyonu.Models.yemek_ogun", b =>
                {
                    b.Navigation("hareketlers");
                });
#pragma warning restore 612, 618
        }
    }
}
